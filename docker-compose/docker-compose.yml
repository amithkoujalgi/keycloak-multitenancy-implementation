version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres:13.1
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - app
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 200M
    restart: unless-stopped

  postgres-ui:
    container_name: postgres-ui
    image: dpage/pgadmin4:4.29
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_SERVER_JSON_FILE: /pgadminconfig/servers.json
    volumes:
      - postgres-ui:/root/.pgadmin
      - ./resources/pgadmin:/pgadminconfig
    ports:
      - 5050:5050
    networks:
      - app
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 200M
    restart: unless-stopped

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:12.0.1
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: demo
      DB_USER: root
      DB_PASSWORD: root
      DB_SCHEMA: public
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - 8080:8080
    networks:
      - app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8080 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500M
    restart: unless-stopped

  kong:
    container_name: kong
    image: kong:2.2.1-alpine
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: demo
      KONG_PG_USER: root
      KONG_PG_PASSWORD: root
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    volumes:
      - ./resources/kong/docker-entrypoint.sh:/docker-entrypoint.sh
    ports:
      - 80:8000
      - 8001:8001
    networks:
      - app
    healthcheck:
      test: [ "CMD-SHELL", "netstat -an | grep 8000 > /dev/null; if [ 0 != $$? ]; then exit 1; fi;" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 200M
    restart: unless-stopped

  kong-ui:
    container_name: kong-ui
    image: pantsel/konga:0.14.9
    volumes:
      - ./resources/kong-ui/default-node.data:/apps/konga/default-node.data
      - ./resources/kong-ui/default-user.data:/apps/konga/default-user.data
    environment:
      KONGA_SEED_USER_DATA_SOURCE_FILE: /apps/konga/default-user.data
      KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE: /apps/konga/default-node.data
    ports:
      - 8002:1337
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    networks:
      - app
    depends_on:
      kong:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 200M
    restart: unless-stopped

  auth-server:
    container_name: auth-server
    image: amithkoujalgi/multi-tenant-auth-server:1.0
    volumes:
      - ./resources/auth-server/docker-entrypoint.sh:/apps/docker-entrypoint.sh
    environment:
      KC_ADMIN_ENDPOINT: http://kong:8000/auth # This is used by auth-server to talk to keycloak server for admin operations such as creation of realm and users, etc.
      KC_AUTH_DOMAIN: localhost # This can also be localhost:8000, depending on the keycloak port exposed from kong. This is to redirect the user to the auth domain of keycloak.
      TENANTS: "org1,org2,org3"
    networks:
      - app
    extra_hosts: # This is to allow redirections from auth-server to keycloak for a tenant's user authentication.
      - "org1.localhost:${IP_ADDRESS}"
      - "org2.localhost:${IP_ADDRESS}"
      - "org3.localhost:${IP_ADDRESS}"
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - 9090:9090
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500M
    restart: unless-stopped

networks:
  app:
    driver: bridge

volumes:
  postgres:
  postgres-ui: